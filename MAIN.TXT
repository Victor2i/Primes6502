PPU_CTRL                 = $2000 ; Write
PPU_MASK                 = $2001 ; Write
PPU_STATUS               = $2002 ; Read
PPU_OAM_ADDRESS          = $2003 ; Write
PPU_OAM_DATA             = $2004
PPU_SCROLL               = $2005 ; Write twice
PPU_ADDRESS              = $2006 ; Write twice
PPU_DATA                 = $2007

APU_SQUARE1_VOL          = $4000 ; Write
APU_SQUARE1_SWEEP        = $4001 ; Write
APU_SQUARE1_LO           = $4002 ; Write
APU_SQUARE1_HI           = $4003 ; Write
APU_SQUARE2_VOL          = $4004 ; Write
APU_SQUARE2_SWEEP        = $4005 ; Write
APU_SQUARE2_LO           = $4006 ; Write
APU_SQUARE2_HI           = $4007 ; Write
APU_TRIANGLE_CTRL        = $4008 ; Write
APU_TRIANGLE_UNUSED      = $4009 ; Write
APU_TRIANGLE_LO          = $400A ; Write
APU_TRIANGLE_HI          = $400B ; Write
APU_NOISE_VOL            = $400C ; Write
APU_NOISE_UNUSED         = $400D ; Write
APU_NOISE_LO             = $400E ; Write
APU_NOISE_HI             = $400F ; Write
APU_DELTA_FREQ           = $4010 ; Write
APU_DELTA_RAW            = $4011 ; Write
APU_DELTA_ADDRESS        = $4012 ; Write
APU_DELTA_LENGTH         = $4013 ; Write
APU_STATUS               = $4015 ; Read
APU_MASTER_CTRL          = $4015 ; Write
APU_FRAME_COUNTER        = $4017 ; Write

OAM_DMA                  = $4014
JOYPAD_PORT              = $4016
JOYPAD_PORT1             = $4016
JOYPAD_PORT2             = $4017

JOYPAD_A                 = 1<<7
JOYPAD_B                 = 1<<6
JOYPAD_SELECT            = 1<<5
JOYPAD_START             = 1<<4
JOYPAD_UP                = 1<<3
JOYPAD_DOWN              = 1<<2
JOYPAD_LEFT              = 1<<1
JOYPAD_RIGHT             = 1<<0

	.org $C000                   ; Code
	.include "PRG/ENTRYPOINT.ASM"
	.include "PRG/JOYPAD.ASM"
	.include "PRG/PRINT.ASM"
	.include "PRG/MATH.ASM"
	.include "PRG/PRIMES.ASM"
	.include "PRG/SIEVE.ASM"

	.org $FF00                ; Code de démarrage
	.include "PRG/INIT.ASM"

	.org $FFFA ; Vecteurs
	.dw _NMI
	.dw _reset
	.dw _IRQ